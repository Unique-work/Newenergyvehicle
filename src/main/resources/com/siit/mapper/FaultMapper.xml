<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.siit.zsw.dao.FaultMapper">
  <resultMap id="BaseResultMap" type="com.siit.zsw.pojo.Fault">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="faulttype" jdbcType="INTEGER" property="faulttype" />
    <result column="faultnumber" jdbcType="INTEGER" property="faultnumber" />
    <result column="faultname" jdbcType="VARCHAR" property="faultname" />
    <result column="proid" jdbcType="INTEGER" property="proid" />
    <result column="COUNT" property="count"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, faulttype, faultnumber, faultname, proid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fault
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getFault" resultType="com.siit.zsw.pojo.Fault">
select  * from fault

  </select>
  <select id="getCountBydid" resultType="java.lang.Integer"></select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fault
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.siit.zsw.pojo.Fault">
    insert into fault (id, faulttype, faultnumber, 
      faultname, proid)
    values (#{id,jdbcType=INTEGER}, #{faulttype,jdbcType=INTEGER}, #{faultnumber,jdbcType=INTEGER}, 
      #{faultname,jdbcType=VARCHAR}, #{proid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.siit.zsw.pojo.Fault">
    insert into fault
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="faulttype != null">
        faulttype,
      </if>
      <if test="faultnumber != null">
        faultnumber,
      </if>
      <if test="faultname != null">
        faultname,
      </if>
      <if test="proid != null">
        proid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="faulttype != null">
        #{faulttype,jdbcType=INTEGER},
      </if>
      <if test="faultnumber != null">
        #{faultnumber,jdbcType=INTEGER},
      </if>
      <if test="faultname != null">
        #{faultname,jdbcType=VARCHAR},
      </if>
      <if test="proid != null">
        #{proid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.siit.zsw.pojo.Fault">
    update fault
    <set>
      <if test="faulttype != null">
        faulttype = #{faulttype,jdbcType=INTEGER},
      </if>
      <if test="faultnumber != null">
        faultnumber = #{faultnumber,jdbcType=INTEGER},
      </if>
      <if test="faultname != null">
        faultname = #{faultname,jdbcType=VARCHAR},
      </if>
      <if test="proid != null">
        proid = #{proid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.siit.zsw.pojo.Fault">
    update fault
    set faulttype = #{faulttype,jdbcType=INTEGER},
      faultnumber = #{faultnumber,jdbcType=INTEGER},
      faultname = #{faultname,jdbcType=VARCHAR},
      proid = #{proid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getListById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select count(*) as count,f.* from fault f,faultinfo i,carmessage m,cardistribution d where f.faulttype = i.faultLevel and m.vehID = i.vehID and d.carmessageid = m.id and d.distributionid=#{distributionid} group by f.faultname
	</select>




</mapper>