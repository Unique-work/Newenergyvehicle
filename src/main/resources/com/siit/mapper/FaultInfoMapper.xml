<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.siit.zsw.dao.FaultInfoMapper">
  <resultMap id="BaseResultMap" type="com.siit.zsw.pojo.FaultInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="faultID" jdbcType="VARCHAR" property="faultid" />
    <result column="faultState" jdbcType="VARCHAR" property="faultstate" />
    <result column="vehID" jdbcType="VARCHAR" property="vehid" />
    <result column="realtime" jdbcType="VARCHAR" property="realtime" />
    <result column="faultLevel" jdbcType="VARCHAR" property="faultlevel" />
    <result column="modID" jdbcType="VARCHAR" property="modid" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Base_Column_List">
    id, faultID, faultState, vehID, realtime, faultLevel, modID, remarks
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from faultinfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from faultinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.siit.zsw.pojo.FaultInfo">
    insert into faultinfo (id, faultID, faultState, 
      vehID, realtime, faultLevel, 
      modID, remarks)
    values (#{id,jdbcType=INTEGER}, #{faultid,jdbcType=VARCHAR}, #{faultstate,jdbcType=VARCHAR}, 
      #{vehid,jdbcType=VARCHAR}, #{realtime,jdbcType=VARCHAR}, #{faultlevel,jdbcType=VARCHAR}, 
      #{modid,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.siit.zsw.pojo.FaultInfo">
    insert into faultinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="faultid != null">
        faultID,
      </if>
      <if test="faultstate != null">
        faultState,
      </if>
      <if test="vehid != null">
        vehID,
      </if>
      <if test="realtime != null">
        realtime,
      </if>
      <if test="faultlevel != null">
        faultLevel,
      </if>
      <if test="modid != null">
        modID,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="faultid != null">
        #{faultid,jdbcType=VARCHAR},
      </if>
      <if test="faultstate != null">
        #{faultstate,jdbcType=VARCHAR},
      </if>
      <if test="vehid != null">
        #{vehid,jdbcType=VARCHAR},
      </if>
      <if test="realtime != null">
        #{realtime,jdbcType=VARCHAR},
      </if>
      <if test="faultlevel != null">
        #{faultlevel,jdbcType=VARCHAR},
      </if>
      <if test="modid != null">
        #{modid,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.siit.zsw.pojo.FaultInfo">
    update faultinfo
    <set>
      <if test="faultid != null">
        faultID = #{faultid,jdbcType=VARCHAR},
      </if>
      <if test="faultstate != null">
        faultState = #{faultstate,jdbcType=VARCHAR},
      </if>
      <if test="vehid != null">
        vehID = #{vehid,jdbcType=VARCHAR},
      </if>
      <if test="realtime != null">
        realtime = #{realtime,jdbcType=VARCHAR},
      </if>
      <if test="faultlevel != null">
        faultLevel = #{faultlevel,jdbcType=VARCHAR},
      </if>
      <if test="modid != null">
        modID = #{modid,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.siit.zsw.pojo.FaultInfo">
    update faultinfo
    set faultID = #{faultid,jdbcType=VARCHAR},
      faultState = #{faultstate,jdbcType=VARCHAR},
      vehID = #{vehid,jdbcType=VARCHAR},
      realtime = #{realtime,jdbcType=VARCHAR},
      faultLevel = #{faultlevel,jdbcType=VARCHAR},
      modID = #{modid,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.siit.zsw.pojo.FaultInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="faultID" jdbcType="VARCHAR" property="faultid" />
    <result column="faultState" jdbcType="VARCHAR" property="faultstate" />
    <result column="vehID" jdbcType="VARCHAR" property="vehid" />
    <result column="realtime" jdbcType="VARCHAR" property="realtime" />
    <result column="faultLevel" jdbcType="VARCHAR" property="faultlevel" />
    <result column="modID" jdbcType="VARCHAR" property="modid" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Base_Column_List">
    id, faultID, faultState, vehID, realtime, faultLevel, modID, remarks
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from faultinfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from faultinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.siit.zsw.pojo.FaultInfo">
    insert into faultinfo (id, faultID, faultState, 
      vehID, realtime, faultLevel, 
      modID, remarks)
    values (#{id,jdbcType=INTEGER}, #{faultid,jdbcType=VARCHAR}, #{faultstate,jdbcType=VARCHAR}, 
      #{vehid,jdbcType=VARCHAR}, #{realtime,jdbcType=VARCHAR}, #{faultlevel,jdbcType=VARCHAR}, 
      #{modid,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.siit.zsw.pojo.FaultInfo">
    insert into faultinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="faultid != null">
        faultID,
      </if>
      <if test="faultstate != null">
        faultState,
      </if>
      <if test="vehid != null">
        vehID,
      </if>
      <if test="realtime != null">
        realtime,
      </if>
      <if test="faultlevel != null">
        faultLevel,
      </if>
      <if test="modid != null">
        modID,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="faultid != null">
        #{faultid,jdbcType=VARCHAR},
      </if>
      <if test="faultstate != null">
        #{faultstate,jdbcType=VARCHAR},
      </if>
      <if test="vehid != null">
        #{vehid,jdbcType=VARCHAR},
      </if>
      <if test="realtime != null">
        #{realtime,jdbcType=VARCHAR},
      </if>
      <if test="faultlevel != null">
        #{faultlevel,jdbcType=VARCHAR},
      </if>
      <if test="modid != null">
        #{modid,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.siit.zsw.pojo.FaultInfo">
    update faultinfo
    <set>
      <if test="faultid != null">
        faultID = #{faultid,jdbcType=VARCHAR},
      </if>
      <if test="faultstate != null">
        faultState = #{faultstate,jdbcType=VARCHAR},
      </if>
      <if test="vehid != null">
        vehID = #{vehid,jdbcType=VARCHAR},
      </if>
      <if test="realtime != null">
        realtime = #{realtime,jdbcType=VARCHAR},
      </if>
      <if test="faultlevel != null">
        faultLevel = #{faultlevel,jdbcType=VARCHAR},
      </if>
      <if test="modid != null">
        modID = #{modid,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.siit.zsw.pojo.FaultInfo">
    update faultinfo
    set faultID = #{faultid,jdbcType=VARCHAR},
      faultState = #{faultstate,jdbcType=VARCHAR},
      vehID = #{vehid,jdbcType=VARCHAR},
      realtime = #{realtime,jdbcType=VARCHAR},
      faultLevel = #{faultlevel,jdbcType=VARCHAR},
      modID = #{modid,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.siit.zsw.pojo.Faultinfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="faultID" jdbcType="VARCHAR" property="faultid" />
    <result column="faultState" jdbcType="VARCHAR" property="faultstate" />
    <result column="vehID" jdbcType="VARCHAR" property="vehid" />
    <result column="realtime" jdbcType="VARCHAR" property="realtime" />
    <result column="faultLevel" jdbcType="VARCHAR" property="faultlevel" />
    <result column="modID" jdbcType="VARCHAR" property="modid" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, faultID, faultState, vehID, realtime, faultLevel, modID, remarks
  </sql>
  <select id="selectByExample" parameterType="com.siit.zsw.pojo.FaultinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from faultinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from faultinfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from faultinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.siit.zsw.pojo.FaultinfoExample">
    delete from faultinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.siit.zsw.pojo.Faultinfo">
    insert into faultinfo (id, faultID, faultState, 
      vehID, realtime, faultLevel, 
      modID, remarks)
    values (#{id,jdbcType=INTEGER}, #{faultid,jdbcType=VARCHAR}, #{faultstate,jdbcType=VARCHAR}, 
      #{vehid,jdbcType=VARCHAR}, #{realtime,jdbcType=VARCHAR}, #{faultlevel,jdbcType=VARCHAR}, 
      #{modid,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.siit.zsw.pojo.Faultinfo">
    insert into faultinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="faultid != null">
        faultID,
      </if>
      <if test="faultstate != null">
        faultState,
      </if>
      <if test="vehid != null">
        vehID,
      </if>
      <if test="realtime != null">
        realtime,
      </if>
      <if test="faultlevel != null">
        faultLevel,
      </if>
      <if test="modid != null">
        modID,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="faultid != null">
        #{faultid,jdbcType=VARCHAR},
      </if>
      <if test="faultstate != null">
        #{faultstate,jdbcType=VARCHAR},
      </if>
      <if test="vehid != null">
        #{vehid,jdbcType=VARCHAR},
      </if>
      <if test="realtime != null">
        #{realtime,jdbcType=VARCHAR},
      </if>
      <if test="faultlevel != null">
        #{faultlevel,jdbcType=VARCHAR},
      </if>
      <if test="modid != null">
        #{modid,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.siit.zsw.pojo.FaultinfoExample" resultType="java.lang.Long">
    select count(*) from faultinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update faultinfo
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.faultid != null">
        faultID = #{record.faultid,jdbcType=VARCHAR},
      </if>
      <if test="record.faultstate != null">
        faultState = #{record.faultstate,jdbcType=VARCHAR},
      </if>
      <if test="record.vehid != null">
        vehID = #{record.vehid,jdbcType=VARCHAR},
      </if>
      <if test="record.realtime != null">
        realtime = #{record.realtime,jdbcType=VARCHAR},
      </if>
      <if test="record.faultlevel != null">
        faultLevel = #{record.faultlevel,jdbcType=VARCHAR},
      </if>
      <if test="record.modid != null">
        modID = #{record.modid,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update faultinfo
    set id = #{record.id,jdbcType=INTEGER},
      faultID = #{record.faultid,jdbcType=VARCHAR},
      faultState = #{record.faultstate,jdbcType=VARCHAR},
      vehID = #{record.vehid,jdbcType=VARCHAR},
      realtime = #{record.realtime,jdbcType=VARCHAR},
      faultLevel = #{record.faultlevel,jdbcType=VARCHAR},
      modID = #{record.modid,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.siit.zsw.pojo.Faultinfo">
    update faultinfo
    <set>
      <if test="faultid != null">
        faultID = #{faultid,jdbcType=VARCHAR},
      </if>
      <if test="faultstate != null">
        faultState = #{faultstate,jdbcType=VARCHAR},
      </if>
      <if test="vehid != null">
        vehID = #{vehid,jdbcType=VARCHAR},
      </if>
      <if test="realtime != null">
        realtime = #{realtime,jdbcType=VARCHAR},
      </if>
      <if test="faultlevel != null">
        faultLevel = #{faultlevel,jdbcType=VARCHAR},
      </if>
      <if test="modid != null">
        modID = #{modid,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.siit.zsw.pojo.Faultinfo">
    update faultinfo
    set faultID = #{faultid,jdbcType=VARCHAR},
      faultState = #{faultstate,jdbcType=VARCHAR},
      vehID = #{vehid,jdbcType=VARCHAR},
      realtime = #{realtime,jdbcType=VARCHAR},
      faultLevel = #{faultlevel,jdbcType=VARCHAR},
      modID = #{modid,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.siit.zsw.pojo.FaultInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="faultID" jdbcType="VARCHAR" property="faultid" />
    <result column="faultState" jdbcType="VARCHAR" property="faultstate" />
    <result column="vehID" jdbcType="VARCHAR" property="vehid" />
    <result column="realtime" jdbcType="VARCHAR" property="realtime" />
    <result column="faultLevel" jdbcType="VARCHAR" property="faultlevel" />
    <result column="modID" jdbcType="VARCHAR" property="modid" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />

    <result column="count" property="count" />
    <result column="fremarks" property="fremarks" />
    <result column="fmodID" property="fmodID" />
    <result column="fid" property="fid" />
    <association javaType="FaultMean" property="faultMean">
      <id column="id" property="id" />
      <result column="faultmean" property="faultmean" />
    </association>
    <association javaType="FaultSolution" property="faultSolution">
      <id column="id" property="id" />
      <result column="faultSolution" property="faultsolution" />
    </association>
  </resultMap>

<select id="getfaultinfoByVehID" parameterType="java.lang.String" resultType="com.siit.zsw.pojo.FaultInfo">
    select * from faultinfo where vehID = #{vehID}
</select>

  <sql id="Base_Column_List">
    id, faultID, faultState, vehID, realtime, faultLevel, modID, remarks
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from faultinfo
    where id = #{id,jdbcType=INTEGER}
  </select>



  <select id="getfaultcount" parameterType="java.util.Map" resultType="com.siit.zsw.pojo.FaultInfo">
    select count(*) as count,k.fid,k.faultID,k.fmodID,k.fremarks,k.faultState,k.fremarks from
    (select * from (select * from tbvehlocation l order by l.recordtime desc) j group by j.vehID ) l,
    (select m.*,f.id as fid,f.faultID,f.faultState,f.modID as fmodID,f.remarks as fremarks,a.faultname,a.id as aid from carmessage m,faultinfo f,fault a where m.vehID = f.vehID and a.faulttype = f.faultLevel group by m.vehID) k
    where l.vehID = k.vehID
    <if test="startTime != null and startTime != '' and endTime != null and endTime != ''">
      and l.recordtime between #{startTime,jdbcType=TIMESTAMP} and #{endTime,jdbcType=TIMESTAMP}
    </if>
    <if test="province != null and province != ''">
      and  l.province = #{province}
    </if>
    <if test="carstatus != null and carstatus != ''">
      and  k.aid = #{carstatus}
    </if>
    <if test="modid != null and modid != ''">
      and  l.modID = #{modid}
    </if>
    group by fremarks
  </select>
  <select id="getfaultinfoBymodID" parameterType="java.lang.String" resultMap="BaseResultMap">
	select * from faultinfo,tbfaultsolution,tbfaultmean
	where faultinfo.modID=#{modID}
	and faultinfo.faultID=tbfaultsolution.faultID
	and faultinfo.faultID=tbfaultmean.faultID
</select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from faultinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.siit.zsw.pojo.FaultInfo">
    insert into faultinfo (id, faultID, faultState, 
      vehID, realtime, faultLevel, 
      modID, remarks)
    values (#{id,jdbcType=INTEGER}, #{faultid,jdbcType=VARCHAR}, #{faultstate,jdbcType=VARCHAR}, 
      #{vehid,jdbcType=VARCHAR}, #{realtime,jdbcType=VARCHAR}, #{faultlevel,jdbcType=VARCHAR}, 
      #{modid,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.siit.zsw.pojo.FaultInfo">
    insert into faultinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="faultid != null">
        faultID,
      </if>
      <if test="faultstate != null">
        faultState,
      </if>
      <if test="vehid != null">
        vehID,
      </if>
      <if test="realtime != null">
        realtime,
      </if>
      <if test="faultlevel != null">
        faultLevel,
      </if>
      <if test="modid != null">
        modID,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="faultid != null">
        #{faultid,jdbcType=VARCHAR},
      </if>
      <if test="faultstate != null">
        #{faultstate,jdbcType=VARCHAR},
      </if>
      <if test="vehid != null">
        #{vehid,jdbcType=VARCHAR},
      </if>
      <if test="realtime != null">
        #{realtime,jdbcType=VARCHAR},
      </if>
      <if test="faultlevel != null">
        #{faultlevel,jdbcType=VARCHAR},
      </if>
      <if test="modid != null">
        #{modid,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.siit.zsw.pojo.FaultInfo">
    update faultinfo
    <set>
      <if test="faultid != null">
        faultID = #{faultid,jdbcType=VARCHAR},
      </if>
      <if test="faultstate != null">
        faultState = #{faultstate,jdbcType=VARCHAR},
      </if>
      <if test="vehid != null">
        vehID = #{vehid,jdbcType=VARCHAR},
      </if>
      <if test="realtime != null">
        realtime = #{realtime,jdbcType=VARCHAR},
      </if>
      <if test="faultlevel != null">
        faultLevel = #{faultlevel,jdbcType=VARCHAR},
      </if>
      <if test="modid != null">
        modID = #{modid,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.siit.zsw.pojo.FaultInfo">
    update faultinfo
    set faultID = #{faultid,jdbcType=VARCHAR},
      faultState = #{faultstate,jdbcType=VARCHAR},
      vehID = #{vehid,jdbcType=VARCHAR},
      realtime = #{realtime,jdbcType=VARCHAR},
      faultLevel = #{faultlevel,jdbcType=VARCHAR},
      modID = #{modid,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="getFault" resultType="com.mysql.fabric.xmlrpc.base.Fault">

    SELECT
	id,
	faulttype,
	faultnumber,
	faultname,
	proid
FROM
	fault
  </select>
</mapper>